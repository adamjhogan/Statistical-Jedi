knitr::opts_chunk$set(
comment = "#>", echo = FALSE, message=FALSE, note=FALSE, warning=FALSE, cache= TRUE
)
require(flexplot)
flexplot(agility~speed, data=avengers)
knitr::include_graphics("images/screenshots/images 2021-01-19 at 9.49.08 AM.png")
knitr::include_graphics("images/screenshots/images 2021-01-19 at 9.51.15 AM.png")
knitr::include_graphics("images/screenshots/images 2021-01-19 at 9.53.44 AM.png")
require(tidyverse)
avengers %>% mutate(groups=ifelse(ptsd<2, "a", "b")) %>%
ggplot(aes(willpower, ptsd, color=groups)) +
geom_point() +
scale_colour_manual(values = c("red", "black")) +
theme_bw()+
theme(legend.position ="none", text = element_text(size = 16)) +
geom_smooth()
knitr::include_graphics("images/boat_wake.jpg")
set.seed(12122)
require(flexplot)
d = data.frame(x=rnorm(1000), y=rnorm(1000))
flexplot(y~x, data=d, method="lm")
set.seed(12122)
require(flexplot)
d = data.frame(x=rnorm(1000)); d$y = .7*d$x + rnorm(nrow(d), 0, sqrt(1-.7^2))
flexplot(y~x, data=d, method="lm")
set.seed(12122)
require(flexplot)
d = data.frame(x=rnorm(1000)); d$y = -.7*d$x + rnorm(nrow(d), 0, sqrt(1-.7^2))
flexplot(y~x, data=d, method="lm")
require(tidyverse)
set.seed(131)
d = data.frame(x=rnorm(1000))
d$y1 = -.95*d$x + rnorm(nrow(d), 0, sqrt(1-.9^2))
d$y2 = -.5*d$x + rnorm(nrow(d), 0, sqrt(1-.9^2))
d$y3 = -.3*d$x + rnorm(nrow(d), 0, sqrt(1-.9^2))
d$y4 = -.1*d$x + rnorm(nrow(d), 0, sqrt(1-.9^2))
d$y5 = 0*d$x + rnorm(nrow(d), 0, sqrt(1-.9^2))
d$y6 = .1*d$x + rnorm(nrow(d), 0, sqrt(1-.9^2))
d$y7 = .3*d$x + rnorm(nrow(d), 0, sqrt(1-.9^2))
d$y8 = .5*d$x + rnorm(nrow(d), 0, sqrt(1-.9^2))
d$y9 = .95*d$x + rnorm(nrow(d), 0, sqrt(1-.9^2))
a1 = flexplot(y1~x, data=d, method="lm") + labs(y="y")
a2 = flexplot(y2~x, data=d, method="lm") + labs(y="y")
a3 = flexplot(y3~x, data=d, method="lm") + labs(y="y")
a4 = flexplot(y4~x, data=d, method="lm") + labs(y="y")
a5 = flexplot(y5~x, data=d, method="lm") + labs(y="y")
a6 = flexplot(y6~x, data=d, method="lm") + labs(y="y")
a7 = flexplot(y7~x, data=d, method="lm") + labs(y="y")
a8 = flexplot(y8~x, data=d, method="lm") + labs(y="y")
a9 = flexplot(y9~x, data=d, method="lm") + labs(y="y")
require(cowplot)
cowplot::plot_grid(a1, a2, a3, a4, a5, a6, a7, a8, a9, nrow=3, ncol=3)
flexplot(strength~speed, data=avengers)
flexplot(ptsd~minutes.fighting, data=avengers)
set.seed(1212)
n = 30
hours = rnorm(n)
star_wars = rnorm(n)
exam_1 = .5*hours + rnorm(n, 0, sqrt(1-.5^2))
final_exam = .5*hours + .6*exam_1 + rnorm(n, 0, sqrt(1-(.5)^2 + (.6)^2))
d = data.frame(hours = rescale(hours, 1, .2), star_wars=rescale(star_wars, 5, 1.5), exam_1=rescale(exam_1, 50, 10), final_exam=rescale(final_exam, 50, 10))
d = round(d, digits=1)
find_right = which(d$hours==min(d$hours))
d[find_right,c("star_wars", "final_exam")] = c(20, 130)
d[find_right,c("exam_1", "final_exam")] = c(120, 130)
a = flexplot(final_exam~hours, data=d, method="lm", se=F) +
labs(x="Hours Studied", y="Final Score", title="Fit with Outlier")
a
influence = flexplot(final_exam~hours, data=d, method="lm", se=F) +
labs(x="Hours Studied", y="Final Score", title="Fit with Outlier")
b = flexplot(final_exam~hours, data=d, suppress_smooth = T, se=F) +
geom_smooth(method=MASS::rlm, se=F) +
labs(x="Hours Studied", y="Final Score", title="Fit Ignoring Outlier")
b
set.seed(1212)
n = 30
hours = rnorm(n)
star_wars = rnorm(n)
exam_1 = .5*hours + rnorm(n, 0, sqrt(1-.5^2))
final_exam = .5*hours + .6*exam_1 + rnorm(n, 0, sqrt(1-(.5)^2 + (.6)^2))
d = data.frame(hours = rescale(hours, 1, .2), star_wars=rescale(star_wars, 5, 1.5), exam_1=rescale(exam_1, 50, 10), final_exam=rescale(final_exam, 50, 10))
d = round(d, digits=1)
find_right = which(d$hours==min(d$hours))
d[find_right,c("star_wars", "final_exam")] = c(20, 130)
d[find_right,c("exam_1", "final_exam")] = c(120, 130)
a = flexplot(final_exam~hours, data=d, method="lm", se=F) +
labs(x="Hours Studied", y="Final Score", title="Fit with Outlier")
set.seed(1212)
n = 3000
hours = rnorm(n)
star_wars = rnorm(n)
exam_1 = .5*hours + rnorm(n, 0, sqrt(1-.5^2))
final_exam = .5*hours + .6*exam_1 + rnorm(n, 0, sqrt(1-(.5)^2 + (.6)^2))
d = data.frame(hours = rescale(hours, 1, .2), star_wars=rescale(star_wars, 5, 1.5), exam_1=rescale(exam_1, 50, 10), final_exam=rescale(final_exam, 50, 10))
d = round(d, digits=1)
find_right = which(d$hours==min(d$hours))
d[find_right,c("star_wars", "final_exam")] = c(20, 130)
d[find_right,c("exam_1", "final_exam")] = c(120, 130)
a = flexplot(final_exam~hours, data=d, method="lm", se=F) +
labs(x="Hours Studied", y="Final Score", title="Fit with Outlier")
a
outlier = flexplot(final_exam~hours, data=d, method="lm", se=F) +
labs(x="Hours Studied", y="Final Score", title="Fit with Outlier")
b = flexplot(final_exam~hours, data=d, suppress_smooth = T, se=F) +
geom_smooth(method=MASS::rlm, se=F) +
labs(x="Hours Studied", y="Final Score", title="Fit Ignoring Outlier")
require(patchwork)
outlier+b
install.packages("patchwork")
cowplot::plot_grid(outlier, b)
cowplot::plot_grid(outlier, influence)
outlier = outlier + labs(main="Low Influence Outlier")
cowplot::plot_grid(outlier, influence)
outlier
outlier = outlier + labs(title="Low Influence Outlier")
outlier
influence = outlier + labs(title="High Influence Outlier")
cowplot::plot_grid(outlier, influence)
leverage = flexplot(final_exam~exam_1, data=d, method="lm", se=F) + labs(x="Midterm", y="Final Exam", title="A High Leverage Datapoint")
leverage = flexplot(final_exam~exam_1, data=d, method="lm", se=F) + labs(x="Midterm", y="Final Exam", title="A High Leverage Datapoint")
outlier = outlier + labs(title="Low Influence Outlier")
cowplot::plot_grid(outlier, influence, leverage)
cowplot::plot_grid(outlier, influence, leverage, nrow=1)
cowplot::plot_grid(outlier, influence, leverage, nrow=3)
cowplot::plot_grid(outlier, influence, leverage, nrow=2)
set.seed(1212)
n = 30
hours = rnorm(n)
star_wars = rnorm(n)
exam_1 = .5*hours + rnorm(n, 0, sqrt(1-.5^2))
final_exam = .5*hours + .6*exam_1 + rnorm(n, 0, sqrt(1-(.5)^2 + (.6)^2))
d = data.frame(hours = rescale(hours, 1, .2), star_wars=rescale(star_wars, 5, 1.5), exam_1=rescale(exam_1, 50, 10), final_exam=rescale(final_exam, 50, 10))
d = round(d, digits=1)
find_right = which(d$hours==min(d$hours))
d[find_right,c("star_wars", "final_exam")] = c(20, 130)
d[find_right,c("exam_1", "final_exam")] = c(120, 130)
influence = flexplot(final_exam~hours, data=d, method="lm", se=F) +
labs(x="Hours Studied", y="Final Score", title="Fit with Outlier")
require(patchwork)
set.seed(1212)
n = 3000
hours = rnorm(n)
star_wars = rnorm(n)
exam_1 = .5*hours + rnorm(n, 0, sqrt(1-.5^2))
final_exam = .5*hours + .6*exam_1 + rnorm(n, 0, sqrt(1-(.5)^2 + (.6)^2))
d = data.frame(hours = rescale(hours, 1, .2), star_wars=rescale(star_wars, 5, 1.5), exam_1=rescale(exam_1, 50, 10), final_exam=rescale(final_exam, 50, 10))
d = round(d, digits=1)
find_right = which(d$hours==min(d$hours))
d[find_right,c("star_wars", "final_exam")] = c(20, 130)
d[find_right,c("exam_1", "final_exam")] = c(120, 130)
outlier = flexplot(final_exam~hours, data=d, method="lm", se=F) +
labs(x="Hours Studied", y="Final Score", title="Fit with Outlier")
leverage = flexplot(final_exam~exam_1, data=d, method="lm", se=F) + labs(x="Midterm", y="Final Exam", title="A High Leverage Datapoint")
outlier = outlier + labs(title="Low Influence Outlier")
cowplot::plot_grid(outlier, influence, leverage, nrow=2)
outlier = outlier + labs(title="Low Influence Outlier")
influence = influence + labs(title="High Influence Outlier")
cowplot::plot_grid(outlier, influence, leverage, nrow=2)
set.seed(123124)
groups = sample(c(1,0), size=400, replace=T)
outcome = groups + rnorm(400, 10,2)
d = data.frame(Group=groups, Outcome=outcome)
a = flexplot(Outcome~Group, data=d, jitter=F, suppress_smooth = T, alpha=.2)
a
b = flexplot(Outcome~Group_Cat, data=d%>%mutate(Group_Cat = cut(Group, breaks=c(-Inf, .5, Inf), labels=c("Male", "Female"), ordered=T)), jitter=F, alpha = .2, suppress_smooth = T) + labs(x="")
b
citr:::insert_citation()
c = flexplot(Outcome~Group_Cat, data=d%>%mutate(Group_Cat = cut(Group, breaks=c(-Inf, .5, Inf), labels=c("Male", "Female"), ordered=T)), raw.data=F, suppress_smooth = T) + labs(x="") + geom_jitter(width=.2, alpha=.2)
c
e = flexplot(Outcome~Group_Cat, data=d%>%mutate(Group_Cat = cut(Group, breaks=c(-Inf, .5, Inf), labels=c("Male", "Female"), ordered=T)), spread="sterr") + labs(x="")
plot_grid(a,b)
plot_grid(a,b, c, e, nrow=1)
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T)
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_smooth()
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_smooth(method="lm")
mean_diff = avengers %>% group_by(north_south) %>% summarize(mean=mean(ptsd))
mean_diff
diff(mean_diff$mean)
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_abline(slope = diff(mean_diff$mean))
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_abline(slope = diff(mean_diff$mean), col="red")
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_abline(slope = diff(mean_diff$mean), col="red", intercept=0)
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_abline(slope = diff(mean_diff$mean), col="red", intercept=1)
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_abline(slope = -1*diff(mean_diff$mean), col="red", intercept=1)
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_abline(slope = -1*diff(mean_diff$mean), col="red", intercept=mean_diff[1])
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_abline(slope = -1*diff(mean_diff$mean), col="red", intercept=mean_diff$mean[1])
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_abline(slope = -1*diff(mean_diff$mean), col="red", intercept=mean_diff$mean[2])
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_hline(yintercept=0)
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_vline(xintercept=0)
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_vline(xintercept=1)
mean_diff
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_vline(xintercept=1) +
geom_abline(slope = -1*diff(mean_diff$mean), col="red", intercept=mean_diff$mean[2]+ diff(mean_diff$mean))
flexplot(ptsd~north_south, data=avengers, suppress_smooth = T) +
geom_abline(slope = -1*diff(mean_diff$mean), col="red", intercept=mean_diff$mean[2]+ diff(mean_diff$mean))
data(carpool)
require(tidyverse)
summary_stats = carpool %>%
group_by(Route) %>%
summarize(driving_time = round(mean(Time), digits=1),
stdev = round(sd(Time), digits=1),
n = length(Time))
knitr::kable(summary_stats, digits=1)
require(ggplot2)
routeA = qnorm(.05, summary_stats$driving_time[1], summary_stats$stdev[1])
routeB = qnorm(.05, summary_stats$driving_time[2], summary_stats$stdev[2])
routeA
routeB
difference.plot
str(difference.plot)
require(tidyverse)
set.seed(12122122)
carpool = fifer::make.data(cor=NULL, means=c(19, 24), sds=c(2.75, 2.75), c(5, 6), c("Time","Route"), c("Route A", "Route B"), digits=c(1))
### summarize data
summary_stats = carpool %>%
group_by(Route) %>%
summarize(driving_time = round(mean(Time), digits=1), stdev = round(sd(Time), digits=1), n = length(Time))
summary_stats
difference.mean = diff(summary_stats$driving_time)
difference.sd = with(summary_stats, sqrt(((n[1]-1)*stdev[1]^2 + (n[2]-1)*stdev[2]^2)/(n[1] + n[2] - 2)))
### estimate prior distribution
prior.mean = 15
prior.sd = 1.5
prior.diff = 2
### aggregate means
n = nrow(carpool)
dmean = summary_stats$driving_time[1]
dsd = summary_stats$stdev[1]
posterior.mean = ((1/prior.sd^2)/(n/dsd^2 + 1/prior.sd^2))*prior.mean + ((n/dsd^2)/(n/dsd^2 + 1/prior.sd^2))*dmean
posterior.mean
posterior.diff = ((1/prior.sd^2)/(n/difference.sd^2 + 1/difference.sd^2))*prior.diff + ((n/difference.sd^2)/(n/dsd^2 + 1/prior.sd^2))*difference.mean
### aggregate standard deviations
posterior.sd = sqrt(prior.sd^2 + (dsd^2)/n)
posterior.sd.diff = sqrt(prior.sd^2 + (difference.sd^2)/n)
### create densities
x = seq(from=-7, to=15, length.out=100)
prior.density = dnorm(x, prior.diff, prior.sd)
data.density = dnorm(x, difference.mean, difference.sd)
posterior.density = dnorm(x, posterior.diff, posterior.sd.diff)
d = data.frame(density = c(prior.density, data.density, posterior.density), estimate = rep(c("Prior", "Data", "Posterior"), each=100), minutes=x)
d$estimate = factor(d$estimate, c("Prior", "Data", "Posterior"))
difference.plot = ggplot(d, aes(x=minutes, y=density, group=estimate, color=estimate)) + geom_line() + theme_minimal()
difference.plot
x = seq(from=7, to=28, length.out=100)
prior.density = dnorm(x, prior.mean, prior.sd)
data.density = dnorm(x, dmean, dsd)
posterior.density = dnorm(x, posterior.mean, posterior.sd)
d = data.frame(density = c(prior.density, data.density, posterior.density), estimate = rep(c("Prior", "Data", "Posterior"), each=100), minutes=x)
means.plots = ggplot(d, aes(x=minutes, y=density, group=estimate, color=estimate)) + geom_line() + theme_minimal()
save(summary_stats, carpool, difference.mean, difference.sd, prior.mean, prior.sd, prior.diff,
dmean, dsd, posterior.diff, posterior.sd, posterior.sd.diff, posterior.mean,
difference.plot, means.plots,
file="data/carpool.rda")
#data(carpool)
load("data/carpool.rda")
install.packages("rstanarm")
install.packages("rstanarm")
install.packages("ggtext")
mood = round(rnorm(10, 5, 1.5) )
knitr::kable(mood)
mood = data.frame(Mood = round(rnorm(10, 5, 1.5) ))
knitr::kable(mood)
mood = data.frame(Rating = round(rnorm(10, 5, 1.5) ))
knitr::kable(mood)
round(mean(mood$Rating), digits=1)
require(flexplot)
data(ideation)
# effect of health after controlling for stress
flexplot(ideation~health | stress, data=ideation)
flexplot(ideation~stress | health, data=ideation)
mod_poly = lm(ideation~health + stress + I(stress^2), data=ideation)
visualize(mod_poly, plot="model")
flexplot(ideation~stress | health, data=ideation)
visualize(mod_poly, plot="model")
visualize(mod_poly, plot="model", formula=ideation~stress|health)
visualize(mod_poly, plot="residuals")
estimates(mod_poly)
added.plot(ideation~health,
data=ideation,
lm_formula = ideation~stress + I(stress^2))
visualize(mod_poly)
visualize(mod_poly, plot="residuals")
visualize(mod_poly, plot="model")
visualize(mod_poly, plot="model",
formula=ideation~stress|health)
added.plot(ideation~stress + health,
data=ideation)
added.plot(ideation~health + stress,
data=ideation)
citr:::insert_citation()
mean_ratings = data.frame(mean_rating=rnorm(100, 5, 1/sqrt(10)))
flexplot(mean_ratings~1, data=mean_ratings)
mean_ratings = data.frame(mean_rating=rnorm(100, 5, 1/sqrt(10)))
flexplot(mean_rating~1, data=mean_ratings)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(10)))
flexplot(mean_rating~1, data=mean_ratings)
flexplot(mean_rating~1, data=mean_ratings) + xlab("Mean Rating of a Groundhog Day")
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day")
require(ggplot2)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(10)))
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day")
set.seed(2323)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(10)))
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day")
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
mood = data.frame(Rating = round(rnorm(10, 5, 1.5) ))
knitr::kable(mood)
require(ggplot2)
set.seed(2323)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(10)))
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
require(ggplot2)
require(flexplot)
require(flexplot)
set.seed(2323)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(10)))
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
mood = data.frame(Rating = round(rnorm(5, 5, 1.5) ))
knitr::kable(mood)
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(5)))
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(10)))
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(50)))
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
mood = data.frame(Rating = round(rnorm(5, 5, 1.5) ))
knitr::kable(mood)
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(5)))
a=flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
a
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(50)))
b = flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
b
require(patchwork)
a+b
a+b + layout(nrow=2)
?pathwork
?`+`
a+b + plot_layout(nrow=2)
mood = data.frame(Rating = round(rnorm(5, 5, 1.5) ))
knitr::kable(mood)
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings1 = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(5)))
a=flexplot(mean_rating~1, data=mean_ratings1) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
a
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings2 = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(50)))
b = flexplot(mean_rating~1, data=mean_ratings2) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
b
require(patchwork)
a+b + plot_layout(nrow=2)
mean_ratings2
mean_ratings2
round(min(mean_ratings2$mean_rating), digits=1)
?cor
??r to z
??fisher
#compute fisher's z for a correlation
MBESS::transform_r.Z(.5)
MBESS::ci.cc(r=.35, n=100, conf.level=.95)
MBESS::ci.cc(r=.5, n=100, conf.level=.95)
z_lower = MBESS::transform_r.Z(.33)
z
#compute fisher's z for a correlation
z = MBESS::transform_r.Z(.5)
z_lower = MBESS::transform_r.Z(.33)
z_lower
z_sd = .5*(z-zZ_lower)
#compute fisher's z for a correlation
z = MBESS::transform_r.Z(.5)
z_lower = MBESS::transform_r.Z(.33)
z_sd = .5*(z-zZ_lower)
z_sd = .5*(z-z_lower)
z_sd
z_dist = rnorm(1000, z, z_sd)
z = MBESS::transform_r.Z(.5)
z_lower = MBESS::transform_r.Z(.33)
z_sd = .5*(z-z_lower)
z_dist = rnorm(1000, z, z_sd)
r_dist = MBESS::transform_Z.r(z_dist)
hist(r_dist)
#compute fisher's z for a correlation
z = MBESS::transform_r.Z(.35)
ci.cc(r=.35, n=100, conf.level=.95)
MBESS::ci.cc(r=.35, n=100, conf.level=.95)
#compute fisher's z for a correlation
z = MBESS::transform_r.Z(.35)
#MBESS::ci.cc(r=.35, n=100, conf.level=.95)
z_lower = MBESS::transform_r.Z(.1649)
z_sd = .5*(z-z_lower)
z_dist = rnorm(1000, z, z_sd)
r_dist = MBESS::transform_Z.r(z_dist)
flexplot(r~1, data=data.frame(r=r_dist))
#compute fisher's z for a correlation
z = MBESS::transform_r.Z(.35)
#MBESS::ci.cc(r=.35, n=100, conf.level=.95)
z_lower = MBESS::transform_r.Z(.1649)
z_sd = .5*(z-z_lower)
z_dist = rnorm(10000, z, z_sd)
r_dist = MBESS::transform_Z.r(z_dist)
flexplot(r~1, data=data.frame(r=r_dist))
vals = data.frame(difference = rnorm(10000, .4, 1/sqrt(50)))
flexplot(difference~1, data=vals)
knitr::opts_chunk$set(
comment = "#>", echo = FALSE, message=FALSE, note=FALSE, warning=FALSE, cache= FALSE
)
mood = data.frame(Rating = round(rnorm(5, 5, 1.5) ))
knitr::kable(mood)
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings1 = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(5)))
a=flexplot(mean_rating~1, data=mean_ratings1) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
a
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings2 = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(50)))
b = flexplot(mean_rating~1, data=mean_ratings2) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
b
require(patchwork)
a+b + plot_layout(nrow=2)
require(patchwork)
a+b + plot_layout(nrow=2)
smallest_1 = round(min(mean_ratings1$mean_rating), 1)
smallest_2 = round(min(mean_ratings2$mean_rating), 1)
diff1 = 5 - smallest_1
diff2 = 5 - smallest_2
diff.val
diff.val = rnorm(1, .4, 1)
diff.val
diff.val = rnorm(1, .4, 1/sqrt(50))
diff.val
flexplot(difference~1, data=vals) +
geom_vline(xintercept = diff.val)
diff.val = .33#rnorm(1, .4, 1/sqrt(50))
vals = data.frame(difference = rnorm(10000, .4, 1/sqrt(50)))
flexplot(difference~1, data=vals) +
geom_vline(xintercept = diff.val, col="red")
1.2/sqrt(50)
flexplot(difference~1, data=data.frame(difference = rnorm(10000, .33, .17)))
flexplot(difference~1, data=data.frame(difference = rnorm(10000, .33, .17))) +
labs(main="Sampling Distribution if mean = .33 and sd = .17", x="Mean Difference")
flexplot(difference~1, data=data.frame(difference = rnorm(10000, .33, .17))) +
labs(subtitle="Sampling Distribution if mean = .33 and sd = .17", x="Mean Difference")
flexplot(difference~1, data=data.frame(difference = rnorm(10000, .33, .17))) +
labs(subtitle="Sampling Distribution if mean = .33 and sd = .17", x="Mean Difference") +
theme_bw()
flexplot(difference~1, data=data.frame(difference = rnorm(10000, .33, .17))) +
labs(subtitle="Sampling Distribution if Mean = .33 and Sd = .17", x="Mean Difference") +
theme_bw()
# yes, I know this should be a t, but I don't care :)
lower = qnorm(.025, .33, .17)
upper = qnorm(.975, .33, .17)
lower
upper
install.packages("ggtext")
install.packages("scatterplot3d")
install.packages("rstanarm")
x = rnorm(100)
y = .5*x + rnorm(100, 0, sqrt(1-.5^2))
d = data.frame(x=x, y=y)
flexplot(y~x, data=d, method="lm")
require(flexplot)
set.seed(12313)
x = rnorm(100)
y = .5*x -.2*x^2 + rnorm(100, 0, sqrt(1-.5^2))
d = data.frame(x=x, y=y)
flexplot(y~x, data=d, method="lm")
flexplot(y~x, data=d, method="lm", se=F)
flexplot(y~x, data=d, method="quadratic")
