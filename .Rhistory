mean_ratings = data.frame(mean_rating=rnorm(100, 5, 1/sqrt(10)))
flexplot(mean_rating~1, data=mean_ratings)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(10)))
flexplot(mean_rating~1, data=mean_ratings)
flexplot(mean_rating~1, data=mean_ratings) + xlab("Mean Rating of a Groundhog Day")
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day")
require(ggplot2)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(10)))
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day")
set.seed(2323)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(10)))
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day")
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
mood = data.frame(Rating = round(rnorm(10, 5, 1.5) ))
knitr::kable(mood)
require(ggplot2)
set.seed(2323)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(10)))
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
require(ggplot2)
require(flexplot)
require(flexplot)
set.seed(2323)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(10)))
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
mood = data.frame(Rating = round(rnorm(5, 5, 1.5) ))
knitr::kable(mood)
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(5)))
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(10)))
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(50)))
flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
mood = data.frame(Rating = round(rnorm(5, 5, 1.5) ))
knitr::kable(mood)
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(5)))
a=flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
a
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(50)))
b = flexplot(mean_rating~1, data=mean_ratings) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
b
require(patchwork)
a+b
a+b + layout(nrow=2)
?pathwork
?`+`
a+b + plot_layout(nrow=2)
mood = data.frame(Rating = round(rnorm(5, 5, 1.5) ))
knitr::kable(mood)
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings1 = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(5)))
a=flexplot(mean_rating~1, data=mean_ratings1) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
a
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings2 = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(50)))
b = flexplot(mean_rating~1, data=mean_ratings2) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
b
require(patchwork)
a+b + plot_layout(nrow=2)
mean_ratings2
mean_ratings2
round(min(mean_ratings2$mean_rating), digits=1)
?cor
??r to z
??fisher
#compute fisher's z for a correlation
MBESS::transform_r.Z(.5)
MBESS::ci.cc(r=.35, n=100, conf.level=.95)
MBESS::ci.cc(r=.5, n=100, conf.level=.95)
z_lower = MBESS::transform_r.Z(.33)
z
#compute fisher's z for a correlation
z = MBESS::transform_r.Z(.5)
z_lower = MBESS::transform_r.Z(.33)
z_lower
z_sd = .5*(z-zZ_lower)
#compute fisher's z for a correlation
z = MBESS::transform_r.Z(.5)
z_lower = MBESS::transform_r.Z(.33)
z_sd = .5*(z-zZ_lower)
z_sd = .5*(z-z_lower)
z_sd
z_dist = rnorm(1000, z, z_sd)
z = MBESS::transform_r.Z(.5)
z_lower = MBESS::transform_r.Z(.33)
z_sd = .5*(z-z_lower)
z_dist = rnorm(1000, z, z_sd)
r_dist = MBESS::transform_Z.r(z_dist)
hist(r_dist)
#compute fisher's z for a correlation
z = MBESS::transform_r.Z(.35)
ci.cc(r=.35, n=100, conf.level=.95)
MBESS::ci.cc(r=.35, n=100, conf.level=.95)
#compute fisher's z for a correlation
z = MBESS::transform_r.Z(.35)
#MBESS::ci.cc(r=.35, n=100, conf.level=.95)
z_lower = MBESS::transform_r.Z(.1649)
z_sd = .5*(z-z_lower)
z_dist = rnorm(1000, z, z_sd)
r_dist = MBESS::transform_Z.r(z_dist)
flexplot(r~1, data=data.frame(r=r_dist))
#compute fisher's z for a correlation
z = MBESS::transform_r.Z(.35)
#MBESS::ci.cc(r=.35, n=100, conf.level=.95)
z_lower = MBESS::transform_r.Z(.1649)
z_sd = .5*(z-z_lower)
z_dist = rnorm(10000, z, z_sd)
r_dist = MBESS::transform_Z.r(z_dist)
flexplot(r~1, data=data.frame(r=r_dist))
vals = data.frame(difference = rnorm(10000, .4, 1/sqrt(50)))
flexplot(difference~1, data=vals)
knitr::opts_chunk$set(
comment = "#>", echo = FALSE, message=FALSE, note=FALSE, warning=FALSE, cache= FALSE
)
mood = data.frame(Rating = round(rnorm(5, 5, 1.5) ))
knitr::kable(mood)
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings1 = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(5)))
a=flexplot(mean_rating~1, data=mean_ratings1) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
a
require(ggplot2)
require(flexplot)
set.seed(2323)
mean_ratings2 = data.frame(mean_rating=rnorm(1000, 5, 1/sqrt(50)))
b = flexplot(mean_rating~1, data=mean_ratings2) + labs(x="Mean Rating of a Groundhog Day") +
coord_cartesian(xlim=c(1,10))
b
require(patchwork)
a+b + plot_layout(nrow=2)
require(patchwork)
a+b + plot_layout(nrow=2)
smallest_1 = round(min(mean_ratings1$mean_rating), 1)
smallest_2 = round(min(mean_ratings2$mean_rating), 1)
diff1 = 5 - smallest_1
diff2 = 5 - smallest_2
diff.val
diff.val = rnorm(1, .4, 1)
diff.val
diff.val = rnorm(1, .4, 1/sqrt(50))
diff.val
flexplot(difference~1, data=vals) +
geom_vline(xintercept = diff.val)
diff.val = .33#rnorm(1, .4, 1/sqrt(50))
vals = data.frame(difference = rnorm(10000, .4, 1/sqrt(50)))
flexplot(difference~1, data=vals) +
geom_vline(xintercept = diff.val, col="red")
1.2/sqrt(50)
flexplot(difference~1, data=data.frame(difference = rnorm(10000, .33, .17)))
flexplot(difference~1, data=data.frame(difference = rnorm(10000, .33, .17))) +
labs(main="Sampling Distribution if mean = .33 and sd = .17", x="Mean Difference")
flexplot(difference~1, data=data.frame(difference = rnorm(10000, .33, .17))) +
labs(subtitle="Sampling Distribution if mean = .33 and sd = .17", x="Mean Difference")
flexplot(difference~1, data=data.frame(difference = rnorm(10000, .33, .17))) +
labs(subtitle="Sampling Distribution if mean = .33 and sd = .17", x="Mean Difference") +
theme_bw()
flexplot(difference~1, data=data.frame(difference = rnorm(10000, .33, .17))) +
labs(subtitle="Sampling Distribution if Mean = .33 and Sd = .17", x="Mean Difference") +
theme_bw()
# yes, I know this should be a t, but I don't care :)
lower = qnorm(.025, .33, .17)
upper = qnorm(.975, .33, .17)
lower
upper
install.packages("ggtext")
install.packages("scatterplot3d")
install.packages("rstanarm")
x = rnorm(100)
y = .5*x + rnorm(100, 0, sqrt(1-.5^2))
d = data.frame(x=x, y=y)
flexplot(y~x, data=d, method="lm")
require(flexplot)
set.seed(12313)
x = rnorm(100)
y = .5*x -.2*x^2 + rnorm(100, 0, sqrt(1-.5^2))
d = data.frame(x=x, y=y)
flexplot(y~x, data=d, method="lm")
flexplot(y~x, data=d, method="lm", se=F)
flexplot(y~x, data=d, method="quadratic")
require(flexplot)
require(flexplot)
data('avengers')
t.test(avengers$iq, mu = 100)
summary(t_test_model)
# create a new iq variable that subtracts 100 (the tested value)
# from the actual iq scores
avengers$iq2 = avengers$iq - 100
t_test_model = lm(iq2~1, data=avengers)
summary(t_test_model)
visualize(t_test_model)
estimates(t_test_model)
group1 = round(rnorm(5, 10, 3))
group2 = round(rnorm(length(group1), 12, 3))
d = data.frame(group1, group2)
wide_data = d
knitr::kable(d)
d = data.frame(group = c(rep("1", times=length(group1)), rep("2", times=length(group1))), scores=c(group1, group2))
knitr::kable(d)
t.test(ptsd~north_south, data=avengers)
group_means = aggregate(ptsd~north_south, data=avengers, FUN=mean)
ind_t = lm(ptsd~north_south, data=avengers)
estimates(ind_t)
visualize(ind_t)
diet$difference = diet$weight6weeks - diet$pre.weight
install.packages("bookdown")
install.packages('tinytex')
tinytex::install_tinytex()
install.packages("magick")
install.packages("pdftools")
set.seed(123324)
x = rnorm(400)
y = .5*x + rnorm(length(x), 0, sqrt(1-.5^2))
z = rnorm(100)
d = data.frame(x=x, y=y, z=z)
a = flexplot(y~x | z, data=d, method="lm", se=F) + labs(title="Flexplot with a Trend (Slope)") +
theme(plot.title = element_text(size=18))
knitr::opts_chunk$set(
comment = "#>", echo = TRUE, message=FALSE, note=FALSE, warning=FALSE, cache=TRUE
)
require(flexplot)
data(avengers)
flexplot(speed~1, data=avengers)
flexplot(superpower~1, data=avengers)
flexplot(speed~superpower, data=avengers)
flexplot(speed~agility, data=avengers)
require(scatterplot3d)
data(avengers)
scatterplot3d(avengers$speed, avengers$agility, avengers$superpower)
set.seed(123324)
x = rnorm(400)
y = .5*x + rnorm(length(x), 0, sqrt(1-.5^2))
z = rnorm(100)
d = data.frame(x=x, y=y, z=z)
a = flexplot(y~x | z, data=d, method="lm", se=F) + labs(title="Flexplot with a Trend (Slope)") +
theme(plot.title = element_text(size=18))
require(tidyverse)
require(tidyverse)
set.seed(123324)
x = rnorm(400)
y = .5*x + rnorm(length(x), 0, sqrt(1-.5^2))
z = rnorm(100)
d = data.frame(x=x, y=y, z=z)
a = flexplot(y~x | z, data=d, method="lm", se=F) + labs(title="Flexplot with a Trend (Slope)") +
theme(plot.title = element_text(size=18))
b = flexplot(y~z | x, data=d, method="lm", se=F) + labs(title="Flexplot without a Trend (Slope)") +
theme(plot.title = element_text(size=18))
require(patchwork)
a + b
set.seed(123324)
x = rnorm(900)
y = .5*x + rnorm(length(x), 0, sqrt(1-.5^2))
z = rnorm(100)
d = data.frame(x=x, y=y, z=z)
a = flexplot(y~x | z, data=d, method="lm", se=F) + labs(title="Flexplot with a Trend (Slope)") +
theme(plot.title = element_text(size=18))
require(patchwork)
a + b
set.seed(123324)
x = rnorm(900)
y = .5*x + rnorm(length(x), 0, sqrt(1-.5^2))
z = rnorm(length(x))
d = data.frame(x=x, y=y, z=z)
a = flexplot(y~x | z, data=d, method="lm", se=F) + labs(title="Flexplot with a Trend (Slope)") +
theme(plot.title = element_text(size=18))
b = flexplot(y~z | x, data=d, method="lm", se=F) + labs(title="Flexplot without a Trend (Slope)") +
theme(plot.title = element_text(size=18))
require(patchwork)
a + b
set.seed(12332224)
x = rnorm(900)
y = .5*x + rnorm(length(x), 0, sqrt(1-.5^2))
z = rnorm(length(x))
d = data.frame(x=x, y=y, z=z)
a = flexplot(y~x | z, data=d, method="lm", se=F) + labs(title="Flexplot with a Trend (Slope)") +
theme(plot.title = element_text(size=18))
require(patchwork)
a + b
set.seed(123324)
n = 800
x = rnorm(n)
z1 = rnorm(n)
z2 = rnorm(n)
y1 = .5*x + .3*z1 + rnorm(length(x), 0, sqrt(1-.5^2))
y2 = .5*x + .3*z2 + .4*z2*x + rnorm(length(x), 0, sqrt(1-.5^2))
d = data.frame(x=x, y1=y1, y2=y2, z1=z1, z2=z2)
require(flexifiers)
a = (flexplot(y1~x | z1, data=d, method="lm", se=F, ghost.line="red") +
labs(title="Flexplot with Parallel Lines", x="X", y="Y") +
theme(plot.title = element_text(size=14))) %>%
modify_labels(row_panels="Z")
require(flexifiers)
devtools::install_github("dustinfife/flexifiers")
set.seed(123324)
n = 800
x = rnorm(n)
z1 = rnorm(n)
z2 = rnorm(n)
y1 = .5*x + .3*z1 + rnorm(length(x), 0, sqrt(1-.5^2))
y2 = .5*x + .3*z2 + .4*z2*x + rnorm(length(x), 0, sqrt(1-.5^2))
d = data.frame(x=x, y1=y1, y2=y2, z1=z1, z2=z2)
require(flexifiers)
a = (flexplot(y1~x | z1, data=d, method="lm", se=F, ghost.line="red") +
labs(title="Flexplot with Parallel Lines", x="X", y="Y") +
theme(plot.title = element_text(size=14))) %>%
modify_labels(row_panels="Z")
b = (flexplot(y2~x | z2, data=d, method="lm", se=F, ghost.line="red") +
labs(title="Flexplot with Nonparallel Lines", x="X", y="Y") +
theme(plot.title = element_text(size=14))) %>%
modify_labels(col_panels="Z")
require(patchwork)
a + b
set.seed(123324)
n = 800
x = rnorm(n)
y1 = .5*x  + rnorm(length(x), 0, sqrt(1-.5^2))
y2 = .5*x -.2*x^2 + rnorm(length(x), 0, sqrt(1-.5^2))
d = data.frame(x=x, y1=y1, y2=y2)
a = flexplot(y1~x , data=d, method="loess", se=F) +
labs(title="Flexplot without nonlinear effects", x="X", y="Y") +
theme(plot.title = element_text(size=14))
b = flexplot(y2~x , data=d, method="loess", se=F) +
labs(title="Flexplot with nonlinear effects", x="X", y="Y") +
theme(plot.title = element_text(size=14))
require(patchwork)
a + b
install.packages("ggtext")
install.packages("scatterplot3d")
knitr::opts_chunk$set(
comment = "#>", echo = TRUE, message=FALSE, note=FALSE, warning=FALSE, cache=TRUE
)
require(flexplot)
data(avengers)
flexplot(speed~1, data=avengers)
flexplot(superpower~1, data=avengers)
flexplot(speed~superpower, data=avengers)
flexplot(speed~agility, data=avengers)
require(scatterplot3d)
data(avengers)
scatterplot3d(avengers$speed, avengers$agility, avengers$superpower)
flexplot(agility~speed + superpower, data=avengers, method="lm")
flexplot(agility~strength + speed, data=avengers, method="lm")
flexplot(agility~strength | speed, data=avengers)
flexplot(agility~strength | speed, data=avengers, method="quadratic")
flexplot(agility~strength | speed, data=avengers,
method="quadratic",
ghost.line="red")
flexplot(shots.taken~agility | speed + superpower, data=avengers,
method="quadratic",
ghost.line="red")
flexplot(shots.taken~agility | speed + superpower, data=avengers,
method="quadratic",
ghost.line="red",
ghost.reference = list(speed=4.5, superpower="yes"))
flexplot(shots.taken~agility | speed + superpower, data=avengers,
method="quadratic",
ghost.line="orange",
ghost.reference = list(speed=5.2, superpower="no"))
flexplot(shots.taken~agility + superpower | speed + strength, data=avengers,
method="lm",
ghost.line="black")
require(tidyverse)
set.seed(12332224)
x = rnorm(900)
y = .5*x + rnorm(length(x), 0, sqrt(1-.5^2))
z = rnorm(length(x))
d = data.frame(x=x, y=y, z=z)
a = flexplot(y~x | z, data=d, method="lm", se=F) + labs(title="Flexplot with a Trend (Slope)") +
theme(plot.title = element_text(size=18))
b = flexplot(y~z | x, data=d, method="lm", se=F) + labs(title="Flexplot without a Trend (Slope)") +
theme(plot.title = element_text(size=18))
require(patchwork)
a + b
set.seed(123324)
n = 800
x = rnorm(n)
z1 = rnorm(n)
z2 = rnorm(n)
y1 = .5*x + .3*z1 + rnorm(length(x), 0, sqrt(1-.5^2))
y2 = .5*x + .3*z2 + .4*z2*x + rnorm(length(x), 0, sqrt(1-.5^2))
d = data.frame(x=x, y1=y1, y2=y2, z1=z1, z2=z2)
require(flexifiers)
a = (flexplot(y1~x | z1, data=d, method="lm", se=F, ghost.line="red") +
labs(title="Flexplot with Parallel Lines", x="X", y="Y") +
theme(plot.title = element_text(size=14))) %>%
modify_labels(row_panels="Z")
b = (flexplot(y2~x | z2, data=d, method="lm", se=F, ghost.line="red") +
labs(title="Flexplot with Nonparallel Lines", x="X", y="Y") +
theme(plot.title = element_text(size=14))) %>%
modify_labels(col_panels="Z")
require(patchwork)
a + b
set.seed(123324)
n = 800
x = rnorm(n)
y1 = .5*x  + rnorm(length(x), 0, sqrt(1-.5^2))
y2 = .5*x -.2*x^2 + rnorm(length(x), 0, sqrt(1-.5^2))
d = data.frame(x=x, y1=y1, y2=y2)
a = flexplot(y1~x , data=d, method="loess", se=F) +
labs(title="Flexplot without nonlinear effects", x="X", y="Y") +
theme(plot.title = element_text(size=14))
b = flexplot(y2~x , data=d, method="loess", se=F) +
labs(title="Flexplot with nonlinear effects", x="X", y="Y") +
theme(plot.title = element_text(size=14))
require(patchwork)
a + b
added.plot(agility~speed + strength, data=avengers)
set.seed(121211)
cor.mat = matrix(c(
1, -.6, .9,
-.6, 1, -.2,
.9, -.2, 1
), nrow=3)
require(tidyverse)
d = data.frame(MASS::mvrnorm(n=10, mu=c(0,0,0), cor.mat))
names(d) = c("health", "depression", "support")
d = d %>% mutate(health = rescale(health, 20, 4) %>% floor_ceiling(10,30) %>% round,
depression = rescale(depression, 12,5) %>% floor_ceiling(1, 30) %>% round,
support = rescale(support, 50, 15) %>% floor_ceiling(0) %>% round)
mod = lm(health~support, data=d)
knitr::kable(d)
flexplot(health~support, data=d, method="lm", se=F)
mod = lm(health~support, data=d)
d$prediction = predict(mod) %>% round(1)
d$residual = residuals(mod) %>% round(1)
knitr::kable(d)
flexplot(residual~depression, data=d, method="lm", se=F)
added.plot(weight.loss~motivation + therapy.type,
lm_formula = weight.loss~health*muscle.gain,
data=exercise_data)
added.plot(ptsd~agility + north_south, data=avengers)
added.plot(ptsd~agility + speed + superpower + kills + north_south, data=avengers)
added.plot(ptsd~willpower + north_south, data=avengers,
lm_formula = ptsd~minutes.fighting + I(minutes.fighting^2))
install.package("rstanarm")
install.package("rstanarm")
install.packages("rstanarm")
library(flexplot)
require(ggplot2)
library(dplyr)
library(ggplot2)
library(scales)
d = data.frame(Work.Hours = c(0, 80), Income = c(0, 300000))
ggplot(data=d, aes(Work.Hours, Income)) + geom_point() + geom_line() +
theme_bw() + scale_y_continuous(labels=dollar_format(prefix="$"))
#practice > confidence > earnings
require(tidyverse)
set.seed(1322211)
n = 4000
practice = rnorm(n, 0, 1)
confidence = .6*practice + rnorm(n, 0, sqrt(1-.6^2))
earnings = .6*confidence + rnorm(n, 0, sqrt(1-.6^2))
practice = fifer::rescale(practice, 10, 3)
#practice > confidence > earnings
require(tidyverse)
set.seed(1322211)
n = 4000
practice = rnorm(n, 0, 1)
confidence = .6*practice + rnorm(n, 0, sqrt(1-.6^2))
earnings = .6*confidence + rnorm(n, 0, sqrt(1-.6^2))
practice = flexplot::rescale(practice, 10, 3)
confidence = flexplot::rescale(confidence, 50, 15)
earnings = flexplot::rescale(earnings, 0, 30)
d = data.frame(practice = practice, confidence = confidence, earnings = earnings)
a = flexplot(earnings~practice, data=d, method="lm")
b = flexplot(earnings~practice | confidence, data=d, method="lm", bins=3)
#,
#        labels=list(c("-10 - 40 degrees", "40 - 60 degrees", "60 + Degrees")))
cowplot::plot_grid(a,b, nrow=2)
flexplot(weight.loss~therapy.type | motivation, data=exercise_data, spread="sterr")
added.plot(weight.loss~motivation + therapy.type, data=exercise_data)
ancova.model = lm(weight.loss~therapy.type + motivation, data=exercise_data)
visualize(ancova.model, plot="residuals")
estimates(ancova.model)
semip = round(estimates(ancova.model)$semi.p, digits=3)
summod = summary(ancova.model)
a = flexplot(agility~1, data=avengers)
b = flexplot(strength~1, data=avengers)
c = flexplot(flexibility~1, data=avengers)
q = flexplot(speed~1, data=avengers)
require(patchwork)
a+b+c+q
flexplot(agility~strength | speed + flexibility, data=avengers)
added.plot(agility~strength, data=avengers, lm_formula = agility~flexibility + speed)
.42-.28
